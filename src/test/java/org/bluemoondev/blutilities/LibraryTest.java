/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.bluemoondev.blutilities;

import static org.junit.Assert.*;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.ParseException;
import org.junit.Test;

import org.bluemoondev.blutilities.cli.Argument;
import org.bluemoondev.blutilities.cli.ArgumentParser;
import org.bluemoondev.blutilities.cli.ArgumentUtil;
import org.bluemoondev.blutilities.generics.AbstractType;
import org.bluemoondev.blutilities.generics.GenericsUtil;
import org.bluemoondev.blutilities.generics.IType;

public class LibraryTest {
	
	
	@Argument(name = "name", shortcut = "n", required = true)
	private String testArg;
	
	@Argument(name = "age", shortcut = "a")
	private int testArg2;
	
    public void testSomeLibraryMethod() {
        assertTrue("someLibraryMethod should return 'true'", Blutil.justATest("true"));
    }
    
    
   public void testType() {
    	File a = getInteger();
    	System.out.println(a);
    }
    
    public void testPType() {
    	boolean foo = getObj(true);
    }
    
    public <T> T getInteger() {
    	IType type = new AbstractType<T>() {};
    	System.out.println(type.getTypeClass());

    	return null;
    }
    
    
    public <T> T getObj(T something) {
    	System.out.println(GenericsUtil.getClass(something));
    	return something;
    }
    

    @Test public void testArgParser() {
    	// -n "John Smith" -a 27
    	String[] passedArgs = {"-n", "\"John", "Smith\"", "-a", "27"};
    	ArgumentParser parser = new ArgumentParser("Test Parser");
    	parser.parse(getClass(), passedArgs, (s, o) -> {
    		parser.formatHelp(s, o);
    	});
    	
    	System.out.println("Name: " + parser.get("name"));
    	System.out.println("Age: " + parser.get("age"));
    }
    
    public static void main(String[] args) {
		new LibraryTest().testArgParser();
	}

}
