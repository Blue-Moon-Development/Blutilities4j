/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.bluemoondev.blutilities;

import static org.junit.Assert.*;

import java.io.File;

import org.bluemoondev.blutilities.annotations.Argument;
import org.bluemoondev.blutilities.commands.CommandHandler;
import org.bluemoondev.blutilities.commands.CommandParser;
import org.bluemoondev.blutilities.commands.StandardCommandParser;
import org.bluemoondev.blutilities.errors.Errors;
import org.bluemoondev.blutilities.generics.AbstractType;
import org.bluemoondev.blutilities.generics.GenericsUtil;
import org.bluemoondev.blutilities.generics.IType;
import org.junit.Test;

public class LibraryTest {

    public void testSomeLibraryMethod() {
        assertTrue("someLibraryMethod should return 'true'", Blutil.justATest("true"));
    }

    public static void main(String[] args) {
        // new LibraryTest().testArgParser();
        // new LibraryTest().testCliArgParser();
        // new LibraryTest().testCliSubArgParser();
        for (Errors e : Errors.values()) { System.out.println(e); }

        TestCLICommand cmd = new TestCLICommand();
        // ICommand cmd = new BadCommand();
        CommandHandler handler = new CommandHandler();
        handler.addCommand(cmd);
        String msg = "-p 3.1415 -s \"So this is how its going to be, eh?\" some extra stuff -f 21 then the number";
        String[] passedArgs = msg.split(" ");
        handler.execute("cli", passedArgs, true, (s, a) -> {
            cmd.run();
        });

        TestCommand testCmd = new TestCommand();
        handler.addCommand(testCmd);
        msg = "create \"John Smith\" somethingidkwhat 27";
        passedArgs = msg.split(" ");
        Errors e = handler.execute("test", passedArgs, true, (s, a) -> {
            testCmd.run(s);
        });
        
        if(e.getCode() != 0) System.err.println(e);
    }

}
